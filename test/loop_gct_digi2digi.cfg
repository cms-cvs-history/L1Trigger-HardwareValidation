# Description:
#  test gct sequence: digi -> raw -> digi
#  check consistency of input and output rct,gct digi collections

process gctDigiToDigi = {
    
    //include "FWCore/MessageLogger/data/MessageLogger.cfi"
    service = MessageLogger {
    	untracked vstring destinations = { "debug.log" }
    	untracked PSet debug.log = { untracked string threshold = "DEBUG" } 
    	untracked vstring debugModules =  { 
    	    "gctDigiToRaw", "GctRawToDigi", "l1Compare"
    	}
    }
    
    
    untracked PSet maxEvents = { untracked int32 input = -1 }
    
    source = PoolSource {
	untracked vstring fileNames = 	
	{'file:calodigis.root'}
    }
    
    
    # digi->raw
    #include "EventFilter/GctRawToDigi/data/l1GctHwDigis.cfi"
    module gctDigiToRaw = GctDigiToRaw {
	InputTag rctInputLabel = l1RctEmulDigis
	InputTag gctInputLabel = l1GctEmulDigis
	untracked bool verbose = false
	int32 gctFedId = 745
    }    

    # raw->digi
    #include "EventFilter/GctRawToDigi/data/gctDigiToRaw.cfi"
    module l1GctHwDigis = GctRawToDigi {
	InputTag inputLabel = gctDigiToRaw
	int32 gctFedId = 745
	untracked bool verbose = false
	untracked bool unpackInternEm = true
	untracked bool unpackFibres = true

    }

    module dump = DumpFEDRawDataProduct { 
	untracked vint32 feds = { 745 }
	untracked bool dumpPayload = true
    }
    
    # comparator
    include "L1Trigger/HardwareValidation/data/L1Comparator.cfi"
    //replace l1Compare.RCT_emulLabel = l1RctEmulDigis
    //replace l1Compare.RCT_dataLabel = l1GctHwDigis
    replace l1Compare.GCT_emulLabel = l1GctEmulDigis
    replace l1Compare.GCT_dataLabel = l1GctHwDigis
    replace l1Compare.DumpFile      = "dump.txt"
    replace l1Compare.DumpMode      = 1
    replace l1Compare.COMPARE_COLLS = { 0,0,0,1,0,0,0,0,0,0,0,0 }
    # note: only gct em candidates should be compared
    #       with current unpacker implementation

    path p = { 
	gctDigiToRaw, dump
	,l1GctHwDigis 
	,l1Compare
    }
    
    module outputEvents = PoolOutputModule {
    	untracked string fileName = "gctDigiToDigi.root"
    }
    endpath outpath = { outputEvents }
    
}

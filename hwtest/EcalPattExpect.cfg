
#-description: compare hardware response with emulation 
#
# input:  ./data/
#         ecal loaded patterns, jcc/sc captured data
#
# output: ./emul/
#         expected response (in same format as hardware data)
#         dump and comparison of corresponding digis

process EcalPattExpect =  {

    include "FWCore/MessageLogger/data/MessageLogger.cfi"

    untracked PSet maxEvents = { untracked int32 input = 65 }

    source = EmptySource {}

    # emulator configuration
    include "L1TriggerConfig/L1ScalesProducers/data/L1CaloScalesConfig.cff"

    es_source tpparams = EmptyESSource {
	string recordName = "EcalTPParametersRcd"
	vuint32 firstValid = { 1 }
	bool iovIsRunNotTime = false
    }
    es_module = EcalTrigPrimESProducer {
	untracked string DatabaseFileEB = "TPG.txt"
	untracked string DatabaseFileEE = "TPG_EE.txt"
    }

    /// hardware sequence (form digis from captured data)

    # tcc input files -> ecal tpg digis
    module EcalTpgFromLoadedTccData = EcalFEtoDigi {
    	untracked int32  SuperModuleId = -1
    	untracked string FlatBaseName  = "data/triggerConcentratorCard/tcc_"
    	untracked int32 SkipEvents     = 1
    	untracked bool UseIdentityLUT  = false
    	untracked bool debugPrintFlag  = false
    }
    
    # jcc text -> rct digis
    module RctFromCapturedJccData = RctTextToRctDigi {
	string TextFileName = "data/jetCaptureCard/jcc_"
	int32 SkipEvents    = 0
    }

    # sc text -> rct digis
    module RctFromCapturedScData = SourceCardTextToRctDigi {
	string TextFileName   = "data/sourceCard/sc.dat"
	int32 fileEventOffset = 0
    }

    sequence hw = {
	EcalTpgFromLoadedTccData, RctFromCapturedJccData, RctFromCapturedScData
    }
    
    /// emulation sequence (expected response)

    # run rct emulator on ecal tpg digis produced from text
    module RctFromEcalText = L1RCTProducer {
	InputTag ecalDigisLabel = EcalTpgFromLoadedTccData
	InputTag hcalDigisLabel = hcalTriggerPrimitiveDigis
	bool useEcal = true
	bool useHcal = false
	untracked bool patternTest   = true
	string rctTestInputFile      = "-NONE-"
	string rctTestOutputFile     = "-NONE-"
	untracked bool orcaFileInput = false
	FileInPath src      = "L1Trigger/RegionalCaloTrigger/data/rct-input-1.dat"
	FileInPath lutFile  = "L1Trigger/RegionalCaloTrigger/data/patternTestEcal.txt"
	FileInPath lutFile2 = "L1Trigger/RegionalCaloTrigger/data/patternTestHcal.txt"
    }

    # rct emul digi -> jcc text
    module RctDigiToRctText = RctDigiToRctText {
	InputTag RctInputLabel = RctFromEcalText
	string TextFileName    = "emul/jetCaptureCard/jcc_"
	bool HexUpperCase      = false
    }

    # rct emul digi -> source card text
    module RctDigiToScText = RctDigiToSourceCardText {
	InputTag RctInputLabel = RctFromEcalText
	string TextFileName    = "emul/sourceCard/sc.dat"
    }

    # gct digis 
    include "L1TriggerConfig/L1ScalesProducers/data/L1CaloScalesConfig.cff"
    include "L1TriggerConfig/GctConfigProducers/data/L1GctConfig.cff"
    module GctFromEcalText = L1GctEmulator { 
	InputTag inputLabel = RctFromEcalText
    }
    module GctFromCapturedJccData = L1GctEmulator { 
	InputTag inputLabel = RctFromCapturedJccData
    }


    sequence emul = { 
	RctFromEcalText, RctDigiToRctText, RctDigiToScText, 
	GctFromEcalText, GctFromCapturedJccData 
    }

    # compare and dump hardware|emulation information
    include "L1Trigger/HardwareValidation/data/L1Comparator.cfi"
    replace l1Compare.ETP_dataLabel = EcalTpgFromLoadedTccData
    replace l1Compare.ETP_emulLabel = EcalTpgFromLoadedTccData
    replace l1Compare.RCT_dataLabel = RctFromCapturedJccData
  //replace l1Compare.RCT_dataLabel = RctFromCapturedScData
    replace l1Compare.RCT_emulLabel = RctFromEcalText
    replace l1Compare.GCT_dataLabel = GctFromCapturedJccData
    replace l1Compare.GCT_emulLabel = GctFromEcalText
    replace l1Compare.DumpFile      = "dump_patt.txt"
    # mode: display mismatches only (0) or all non-zero candidates (1)
    replace l1Compare.DumpMode      = 1
    # subsystem sequence here is: ecal, hcal, rct, gct, ... 
    replace l1Compare.COMPARE_COLLS = { 1,0,1,1,0,0,0,0,0,0,0,0 }


    ##path1: compare observed and expected response
     path p = { hw & emul, l1Compare }

    ##path2: produce expected hardware response
    #ath p = 
    #EcalTpgFromLoadedTccData, RctFromEcalText, RctDigiToRctText, RctDigiToScText}

}


process HcalRctPattTest = {

    include "FWCore/MessageLogger/data/MessageLogger.cfi"


    source = HcalPatternSource {
        untracked string Patterns = "PATTERN-ID-hcal-0000-0.xml"
        untracked vint32 Bunches  = {5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}
    }

    untracked PSet maxEvents = {untracked int32 input = 1}

    # HCAL TPG digis
#    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
#    include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
#    include "Geometry/CaloEventSetup/data/CaloTopology.cfi"
#    es_module = CaloTowerConstituentsMapBuilder {
#        untracked string MapFile="Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz"
#    }
#    es_source es_ascii = HcalTextCalibrations {
#        VPSet input = {{string object = "ElectronicsMap"
#                        FileInPath file = "emap_hcal_lxcmdtest3.txt"}}
#    }
    es_source = HcalTPGCoderULUT {
        FileInPath filename="CalibCalorimetry/HcalTPGAlgos/data/inputLUTcoder.dat"
    }
    include "CalibCalorimetry/CaloTPG/data/CaloTPGTranscoder.cfi"
    include "CalibCalorimetry/Configuration/data/Hcal_FakeConditions.cff"

    module hcalPattDigis = HcalTrigPrimDigiProducer {
        int32 latency       = 1
        vdouble weights     = {1, 1} //hardware algo		
        bool peakFilter     = true //peak finding on or off
        InputTag inputLabel = source
    }

    # RCT emulator
    include "L1TriggerConfig/L1ScalesProducers/data/L1CaloScalesConfig.cff"

    module rctEmulDigis = L1RCTProducer {
      InputTag ecalDigisLabel = none
      InputTag hcalDigisLabel = hcalPattDigis
      bool useEcal            = false
      bool useHcal            = true
      FileInPath lutFile      = "L1Trigger/RegionalCaloTrigger/data/RCTLUTParameters.txt"
      FileInPath lutFile2     = "L1Trigger/RegionalCaloTrigger/data/RCTHcalScaleFactors.txt"
      untracked bool orcaFileInput = false   # file below will not be used - but is there for info
      FileInPath src               = "L1Trigger/RegionalCaloTrigger/data/rct-input-1.dat"
      string rctTestInputFile      = "-NONE-"
      string rctTestOutputFile     = "-NONE-"
      untracked bool patternTest   = true
    }


    sequence emul = { hcalPattDigis, rctEmulDigis }

    # RCT HW digis from JCC
    module rctHwDigis = RctTextToRctDigi {
      string TextFileName = "PATTERN-ID-rct-RUN-"
      int32 fileEventOffset = 0
    }

    sequence hw = { rctHwDigis }

    # comparator
    module l1compare = L1Comparator {
      untracked string ETP_dataLabel = ""
      untracked string ETP_emulLabel = ""
      untracked string HTP_dataLabel = ""
      untracked string HTP_emulLabel = ""
      untracked string RCT_dataLabel = "l1RctHwDigis"
      untracked string RCT_emulLabel = "l1RctEmulDigis"
      untracked string GCT_dataLabel = ""
      untracked string GCT_emulLabel = ""
      untracked string GT_dataLabel  = ""
      untracked string GT_emulLabel  = ""
      untracked string DumpFile      = "dump.txt"
      untracked int32  DumpMode      = 0
      untracked vuint32 COMPARE_COLLS= { 0,1,0,0 }
    }
   
    path p = { emul & hw, l1compare }

}

/* DT Trigger */

include "Geometry/DTGeometry/data/dtGeometry.cfi"
include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"

### emulator

include "L1TriggerConfig/DTTPGConfigProducers/data/L1DTTPGConfig.cff"
include "L1TriggerConfig/DTTrackFinder/data/L1DTTrackFinderConfig.cff"

//include "L1Trigger/DTTrigger/data/l1DTTPGEmulDigis.cfi"
module l1DTTPGEmulDigis = DTTrigProd {
	
	# Includes configuration parametersets
	#include "L1Trigger/DTTrigger/data/dttpg_conf.cff"

	# Switch off/on debug printouts for producer class
	untracked bool   debug               = false
	
	# BX Correction used to set
	# correct BX to 0 in DTTF input
	int32 BXOffset = 16

	# Convert output into DTTF sector numbering: 
	# false means [1-12] (useful for debug)
	# true is [0-11] useful as input for the DTTF emulator
	bool   DTTFSectorNumbering = true 
}


//include "L1Trigger/DTTrackFinder/data/l1DttfEmulDigis.cfi"
module l1DttfEmulDigis = DTTrackFinder {
       untracked int32 Debug = 0
       untracked bool  Overlap = true
       untracked int32 BX_min = -9
       untracked int32 BX_max =  7
       untracked int32 Extrapolation_Filter = 1
       untracked bool  Extrapolation_21 = false
       untracked bool  EtaTrackFinder = true
       untracked bool  OutOfTime_Filter = false
       untracked int32 OutOfTime_Filter_Window = 1
       untracked int32 Extrapolation_nbits_Phi  = 8
       untracked int32 Extrapolation_nbits_PhiB = 8
       untracked int32 PT_Assignment_nbits_Phi  = 12
       untracked int32 PT_Assignment_nbits_PhiB = 10
       untracked int32 PHI_Assignment_nbits_Phi  = 12
       untracked int32 PHI_Assignment_nbits_PhiB = 10
}


### unpacking

module muonDTTFDigis = DTTFFEDReader {}

#include "EventFilter/DTRawToDigi/data/dtunpacker.cfi"
module muonDTDigis = DTUnpackingModule {
    string dataType = "DDU"
    untracked bool fedbyType = false
    untracked string fedColl = "source"
    untracked bool useStandardFEDid = true
    untracked int32 minFEDid = 730
    untracked int32 maxFEDid = 735
    PSet readOutParameters  = {
	untracked bool localDAQ = false
	untracked bool performDataIntegrityMonitor = false
	untracked bool debug = false
	PSet rosParameters = {
	    untracked bool localDAQ = false
	    untracked bool readingDDU = true  
	    untracked bool writeSC = true
	    untracked bool readDDUIDfromDDU = true
	    untracked bool performDataIntegrityMonitor = false
	    untracked bool debug = false
	}
    }
}

// requested by DTUnpackingModule/muonDTDigis
es_source dtConditions = PoolDBESSource {
    string timetype = "runnumber"
    string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_170_DT"
    PSet DBParameters = {
	untracked int32 messageLevel = 0
	
    }
    VPSet toGet = {
	{ string record = "DTReadOutMappingRcd"
	    string tag = "GRENmap" },
	{ string record = "DTT0Rcd"
	    string tag = "GRENt0" },
	{ string record = "DTTtrigRcd"
	    string tag = "GRENttrigTest" }
    }
    untracked bool siteLocalConfig = false
}


/*
DT NOTES:

DTUnpackingModule:
produces<DTDigiCollection>();
produces<DTLocalTriggerCollection>();

DTTFFEDReader{}
produces<L1MuDTChambPhContainer>();
produces<L1MuDTChambThContainer>();
produces<L1MuDTTrackContainer>("DATA"); only in 17x(not160daq3!)
missing: vector<L1MuRegionalCand> N/added

dtp emulator:
module l1DTTPGEmulDigis = DTTrigProd 
produces<L1MuDTChambPhContainer>();
produces<L1MuDTChambThContainer>();
input:
edm::Handle<DTDigiCollection> dtDigis;
iEvent.getByLabel("muonDTDigis", dtDigis);   

dtf emulator:
module l1DttfEmulDigis = DTTrackFinder {
produces<L1MuDTTrackContainer>("DTTF");
produces<vector<L1MuRegionalCand> >("DT");
input:
edm::Handle<L1MuDTChambPhContainer> dttrig;
e.getByType(dttrig);
edm::Handle<CSCTriggerContainer<csctf::TrackStub> > csctrig;
e.getByType(csctrig);
edm::Handle<L1MuDTChambThContainer> dttrig;
e.getByType(dttrig);

problem:
need to get rid off getbytype
eg L1MuDTChambPhContainer is produced by both tpg emul and tf unpacker !
getByType: Found 2 products rather than one which match all criteria
Looking for type: L1MuDTChambPhContainer
cms::Exception going through module DTTrackFinder/l1DttfEmulDigis
*/

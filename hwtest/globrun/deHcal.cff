/* HCAL Trigger */

### unpacker

include "EventFilter/HcalRawToDigi/data/HcalRawToDigi.cfi" 
replace hcalDigis.InputLabel = source 
//replace hcalDigis.InputLabel = "rawDataCollector"

###emulator 

include "SimCalorimetry/HcalTrigPrimProducers/data/hcaltpdigi.cfi"
replace  hcalTriggerPrimitiveDigis.inputLabel = hcalDigis::demon


// required by emulator: 

es_module = HcalTPGCoderULUT {
   #FileInPath filename="CalibCalorimetry/CaloTPG/data/outputLUTtranscoder.dat"
    FileInPath filename="CalibCalorimetry/HcalTPGAlgos/data/RecHit-TPG-calib.dat"
}


include "CalibCalorimetry/CaloTPG/data/CaloTPGTranscoder.cfi"
replace CaloTPGTranscoder.hcalLUT1 = "CalibCalorimetry/CaloTPG/data/outputLUTtranscoderIdentity.dat"
replace CaloTPGTranscoder.hcalLUT2 = "CalibCalorimetry/CaloTPG/data/TPGcalcDecompress2Identity.txt"

module get =  EventSetupRecordDataGetter  {
    untracked bool verbose=true
     VPSet toGet = {
	{ string record="HcalTPGRecord"
	    vstring data={"HcalTPGCoder"}
	}
    }
}

// required by unpacker:

es_source hcalConditions = PoolDBESSource {
     string timetype = "runnumber"
     string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_170_HCAL"
     PSet DBParameters = {
       untracked int32 messageLevel = 0
      #untracked string authenticationPath = "/nfshome0/hltpro/cmssw/cfg/"
     }
     VPSet toGet = {
       { string record = "HcalPedestalsRcd" 
	    string tag = "hcal_pedestals_fC_gren" },
       { string record = "HcalElectronicsMapRcd" 
	    string tag = "emap_temp_slb_fix_2Dec07" },
       { string record = "HcalGainsRcd" 
	    string tag = "hcal_gains_v1" },
       { string record = "HcalQIEDataRcd" string 
	    tag = "qie_normalmode_v3" },
       { string record = "HcalPedestalWidthsRcd" 
	    string tag = "hcal_widths_fC_gren" }
     }
    untracked bool siteLocalConfig = false
   }

es_module = HcalDbProducer {}

es_source es_hardcode = HcalHardcodeCalibrations { untracked vstring toGet = {"GainWidths", "ChannelQuality"}}


/*
HCAL NOTES

module  hcalDigis = HcalRawToDigi
produces<HcalTrigPrimDigiCollection>();
produces<HBHEDigiCollection>();
produces<HFDigiCollection>();
produces<HODigiCollection>();
produces<HcalUnpackerReport>();
if (unpackCalib_)
produces<HcalCalibDigiCollection>();
if (unpackZDC_)
produces<ZDCDigiCollection>();

module hcalTriggerPrimitiveDigis = HcalTrigPrimDigiProducer
produces<HcalTrigPrimDigiCollection>();
edm::Handle<HBHEDigiCollection> hbheDigis;
edm::Handle<HFDigiCollection>   hfDigis;
e.getByLabel(inputLabel_,hbheDigis);
e.getByLabel(inputLabel_,hfDigis);

*/

